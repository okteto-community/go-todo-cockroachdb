name: cockroach
build:
  cockroach:
    context: cockroach
  todo:
    context: todo
    target: prod
  builder:
    context: todo
    target: builder

deploy:
  image: ${OKTETO_BUILD_COCKROACH_IMAGE}
  commands:
    - name: create database
      command: |
        set -e
        curl -s --create-dirs -o ".postgresql/root.crt" "https://cockroachlabs.cloud/clusters/${COCKROACH_CLUSTERID}/cert"
        sanitizedNamespace=$(echo $OKTETO_NAMESPACE | sed "s/-/_/g")
        
        username="okt_${sanitizedNamespace}"
        databaseName="okt_${sanitizedNamespace}"
        password=$(tr -dc 'A-Za-z0-9!=+' < /dev/urandom | head -c 10)
        cockroach sql --url "postgresql://${COCKROACH_USERNAME}:${COCKROACH_PASSWORD}@${COCKROACH_HOST}:${COCKROACH_PORT}/?sslmode=verify-full" -e "CREATE DATABASE IF NOT EXISTS $databaseName;" --certs-dir=".postgresql"
        cockroach sql --url "postgresql://${COCKROACH_USERNAME}:${COCKROACH_PASSWORD}@${COCKROACH_HOST}:${COCKROACH_PORT}/?sslmode=verify-full" -e "CREATE USER IF NOT EXISTS $username WITH LOGIN PASSWORD '$password'" --certs-dir=".postgresql"
        cockroach sql --url "postgresql://${COCKROACH_USERNAME}:${COCKROACH_PASSWORD}@${COCKROACH_HOST}:${COCKROACH_PORT}/?sslmode=verify-full" -e "GRANT ALL ON DATABASE $databaseName to $username" --certs-dir=".postgresql"


        # make the values available to the following steps and the dashboard
        echo "OKTETO_EXTERNAL_COCKROACHDB_ENDPOINTS_DB_URL=https://cockroachlabs.cloud/cluster/${COCKROACH_CLUSTERID}/overview" >> "$OKTETO_ENV"
        echo "DATABASE_NAME=${databaseName}" >> "$OKTETO_ENV"
        echo "DATABASE_USERNAME=${username}" >> "$OKTETO_ENV"
        echo "DATABASE_PASSWORD=${password}" >> "$OKTETO_ENV"

    - name: deploy application
      command: |
        connectionString="postgresql://${DATABASE_USERNAME}:${DATABASE_PASSWORD}@${COCKROACH_HOST}:${COCKROACH_PORT}/${DATABASE_NAME}?sslmode=verify-full"
        caCert="$(cat '.postgresql/root.crt')"

        helm upgrade --install todo ./chart --set image="${OKTETO_BUILD_TODO_IMAGE}" --set caCert="$caCert" --set connectionString="$connectionString"

destroy:
  image: ${OKTETO_BUILD_COCKROACH_IMAGE}
  commands:
    - name: destroy database
      command: |
        set -e
        sanitizedNamespace=$(echo $OKTETO_NAMESPACE | sed "s/-/_/g")

        username="okt_${sanitizedNamespace}"
        databaseName="okt_${sanitizedNamespace}"
        curl -s --create-dirs -o ".postgresql/root.crt" "https://cockroachlabs.cloud/clusters/${COCKROACH_CLUSTERID}/cert"
        cockroach sql --url "postgresql://${COCKROACH_USERNAME}:${COCKROACH_PASSWORD}@${COCKROACH_HOST}:${COCKROACH_PORT}/?sslmode=verify-full" -e "DROP DATABASE IF EXISTS $databaseName CASCADE;" --certs-dir=".postgresql"
        cockroach sql --url "postgresql://${COCKROACH_USERNAME}:${COCKROACH_PASSWORD}@${COCKROACH_HOST}:${COCKROACH_PORT}/?sslmode=verify-full" -e "DROP USER $username;" --certs-dir=".postgresql"

dev:
  todo-todolist:
    command: bash
    image: ${OKTETO_BUILD_BUILDER_IMAGE}
    sync:
      - todo:/app

external:
  cockroachdb:
    icon: database
    notes: cockroach/README.md
    endpoints:
      - name: db
